server:
  port: 8080
  servlet:
    context-path: /api/v1/web



# 2024-3-16  19:34-项目基本配置
spring:
  servlet:
    multipart:
      enabled: true
      # 2024-8-12  22:54-配置文件上传的文件大小上限(默认为1MB)
      max-file-size: 2048MB
      max-request-size: 2048MB

  datasource:
    # 2024-6-2  21:38-调整时区为北京时间，以避免自动填充日期时间时出现8个小时的时间差
    url: jdbc:mysql://${ip.physical.self-host:127.0.0.1}:4407/ptp_web?serverTimezone=Asia/Shanghai&useSSL=false&useUnicode=true&characterEncoding=utf8&allowPublicKeyRetrieval=true # 2024-4-8  22:14-必须要加 allowPublicKeyRetrieval=true ，否则会报错
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ptp_backend
    password: 7758521
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 初始化时建立物理连接的个数
      initial-size: 5
      # 连接池的最小空闲数量
      min-idle: 5
      # 连接池最大连接数量
      max-active: 20
      # 获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 既作为检测的间隔时间又作为testWhileIdle执行的依据
      time-between-eviction-runs-millis: 60000
      # 销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接(配置连接在池中的最小生存时间)
      min-evictable-idle-time-millis: 30000
      # 用来检测数据库连接是否有效的sql 必须是一个查询语句(oracle中为 select 1 from dual)
      validation-query: select 1 from dual
      # 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: false
      # 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false
      # 是否缓存preparedStatement, 也就是PSCache,PSCache对支持游标的数据库性能提升巨大，比如说oracle,在mysql下建议关闭。
      pool-prepared-statements: false
      # 置监控统计拦截的filters，去掉后监控界面sql无法统计，stat: 监控统计、Slf4j:日志记录、waLL: 防御sqL注入
      filters: stat,wall,slf4j
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      max-pool-prepared-statement-per-connection-size: -1
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      # connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

      web-stat-filter:
        # 是否启用StatFilter默认值true
        enabled: true
        # 添加过滤规则
        url-pattern: /*
        # 忽略过滤的格式
        exclusions: /druid/*,*.js,*.gif,*.jpg,*.png,*.css,*.ico

      stat-view-servlet:
        # 是否启用StatViewServlet默认值true
        enabled: true
        # 访问路径为/druid时，跳转到StatViewServlet
        url-pattern: /druid/*
        # 是否能够重置数据
        reset-enable: false
        # 需要账号密码才能访问控制台，默认为root
        login-username: druid
        login-password: druid
        # IP白名单
        allow: ${ip.physical.self-host:127.0.0.1}
        # IP黑名单（共同存在时，deny优先于allow）
        deny:

        # 2024-4-4  20:30-集成Redis所需配置
  data:
    redis:
      host: ${ip.physical.self-host:127.0.0.1}
      port: 7001
      username: default
      password: root
      timeout: 5s # 2024-6-6  22:40-读超时
      connect-timeout: 5s # 2024-6-6  22:41-连接超时
      jedis:
        pool:
          max-active: 8 # 2024-4-7  9:29-连接池最大连接数
          max-wait: -1 # 2024-4-7  9:30-连接池最大阻塞空闲时间(负数表示无限制)
          max-idle: 8 # 2024-4-7  9:31-连接池最大空闲连接数
          min-idle: 0 # 2024-4-7  9:31-连接池最小空闲连接数
    # 2024-9-9  21:12-引入MongoDB数据库来存储聊天室相关的信息数据
    mongodb:
      host: ${ip.physical.self-host:127.0.0.1}
      port: 27017
      username: root # 2024-9-9  20:57-初始用户名和密码的配置请见docker-compose配置文件
      password: ptp-backend-mongodb-pwd
      database: ptp_web
      authentication-database: admin # 2024-9-9  22:26-解决 MongoError: command find requires authentication 的问题
      auto-index-creation: true # 2024-9-10  20:07-自动建立索引(MongoDB v3.0+ , 该功能默认关闭)
  cache:
    redis:
      time-to-live: 1800s
    cache-names: redis_cache
    type: redis
  jackson:
    serialization:
      # 2024-4-28  22:39-解决采用Jackson默认序列化方式序列化响应结果的时候序列化空字段对象时报错的问题
      fail-on-empty-beans: false
  cloud:
    # 2024-5-16  20:30-Sentinel相关配置
    sentinel:
      transport:
        dashboard: ${ip.physical.self-host:127.0.0.1}:9888 # 2024-5-16  20:30-关联Sentinel控制台
        # Sentinel 默认会对资源请求链路进行整合，这样会导致流控模式中的链路模式无法使用
        # 因此需要关闭 context 整合，这样 sentinel 监控界面会单独展示出每种链路请求路径
        # web-context-unify: false
      log:
        dir: D:\JavaProjects\ptp-web-backend\logs\sentinel\web\
        switch-pid: true # 2024-5-18  21:47-单机多模块必须启用该参数以区分各模块产生的日志


# 2024-6-17  20:24-导入API文档至API fox中作为接口配置数据时，请填写 http://localhost:8080/api/v1/web/v3/docs (即格式为 http://localhost:{服务模块占用的端口}{微服务的上下文路径}/v3/api-docs})
# 2024-3-16  19:33-Knife4j配置
knife4j:
  # enable: true # 2024-3-16  19:42-WebFlux模式下无法增强，运行将报 java.lang.ClassNotFoundException: jakarta.servlet.Filter 异常
  setting:
    language: zh_cn
  cors: true


# 2024-4-24  20:23-OpenAPI文档相关配置
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    csrf:
      enabled: true
    path: /swagger-ui.html


ptp:
  content:
    limit:
      passage-introduction-words-max-length: 35


# 2024-3-26  8:04-MyBatisPlus配置
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
  global-config:
    db-config:
      logic-delete-field: isDelete # 2024-3-26  8:08-全局逻辑删除的实体字段名
      logic-delete-value: 1 # 逻辑已删除值（默认为 1）
      logic-not-delete-value: 0 # 逻辑未删除值（默认为 0）
      update-strategy: ignored # 2024-8-8  22:55-解决MyBatisPlus updateById方法更新不了空字符串和null 的问题 , 会对所有的字段都忽略判断，如果一些字段不想要修改，但是传值的时候没有传递过来，就会被更新为null，可能会影响其他业务数据的正确性
      # insert-strategy: ignored # 2024-8-9  11:33-控制字段在 Insert 时的字段验证策略-忽略判断，效果等同于”ALWAYS”


# 2024-6-1  17:36-RocketMQ相关配置
rocketmq:
  name-server: ${ip.physical.self-host:127.0.0.1}:9876
  producer:
    group: commodity-seckill-record-producer-group


# 2024-6-28  21:30-seata客户端相关配置
seata:
  config:
    # support: nacos, consul, apollo, zk, etcd3
    type: nacos
    nacos:
      server-addr: ${ip.physical.self-host:127.0.0.1}:8848
      # namespace: seata
      group: SEATA_GROUP
      # username: nacos
      # password: nacos
      # context-path:
      # if you use MSE Nacos with auth, mutex with username/password attribute
      #access-key:
      #secret-key:
      data-id: seataServer.properties
  registry:
    type: nacos
    nacos:
      application: seata-server
      server-addr: ${ip.physical.self-host:127.0.0.1}:8848
      group: "SEATA_GROUP"
      # namespace: "seata"
  tx-service-group: "content-operation-transaction-group"


# 2024-8-12  23:15-由于下面的配置中包含敏感信息key , 因此你无法正常推送到Github仓库 , 解决方式 : Profile -> Settings -> Code security and analysis -> disable
# 建议推送完该文件之后再将其打开 , 这是一个很有用的保护机制
# 2024-8-11  17:30-腾讯云对象存储COS密钥相关的配置
cos:
  # noinspection SpellCheckingInspection
  secretId: AKIDRkAmPsT0mF7zpTG4nDo2KvNm6MRM4iLx
  # noinspection SpellCheckingInspection
  secretKey: ccffoqmzDMUWURMAqeMsBey56De5Qd0O
  regionName: ap-nanjing


# 2024-12-5  13:50-Hutool相关参数的配置
hutool:
  # 2024-12-5  17:49-QQ邮箱的校验码文档 : https://wx.mail.qq.com/list/readtemplate?name=app_intro.html#/agreement/authorizationCode
  # 2024-12-5  13:55-通过Hutool的邮箱工具类发送邮件所需配置
  email:
    host: smtp.qq.com # 2024-12-5  14:27-邮件服务器的SMTP地址 , 可选 , 默认为smtp.<发件人邮箱后缀>
    port: 587 # 2024-12-5  14:27-邮件服务器的SMTP端口 , 可选 , 默认25
    auth: true
    ssl-enable: false # 202412-5  14:29-使用SSL加密方式发送邮件 , 在使用QQ或Gmail邮箱时 , 需要强制开启SSL支持 , 需要设置为false , 否则QQ邮箱测试邮件发送报错
    starttls-enable: true # 2024-12-5  16:52-使用STARTTLS安全链接 , STARTTLS是对纯文本通信协议的扩展
    from: 3242742226@qq.com # 2024-12-5  14:28-发件人(必须正确 , 否则发送失败)
    user: 3242742226@qq.com # 2024-12-5  14:28-用户名 , 默认为发件人邮箱前缀
    # noinspection SpellCheckingInspection
    pass: gemqhvfwcjuzdbhe # 2024-12-5  14:28-密码(注意 , 某些邮箱需要为SMTP服务单独设置授权码 , 详情查看相关帮助)
