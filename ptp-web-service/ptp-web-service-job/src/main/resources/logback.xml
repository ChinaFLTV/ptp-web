<?xml version="1.0" encoding="UTF-8"?>
<!--  2024-6-17  19:34-默认每60s检测一次配置文件的变动，设置重新设置为10s  -->
<configuration debug="false" scan="true" scanPeriod="10 seconds">


    <!--获取springboot的yml配置信息-->
    <springProperty scope="context" name="applicationName" source="spring.application.name" defaultValue="default"/>
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <property name="LOG_HOME" value="D:/JavaProjects/ptp-web-backend/logs/logback/service/es"/>


    <!--输出到控制台-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">

        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>

        <withJansi>false</withJansi>

        <encoder>

            <!--<pattern>%d %p (%file:%line)- %m%n</pattern>-->
            <!--格式化输出：%d:表示日期    %thread:表示线程名     %-5level:级别从左显示5个字符宽度  %msg:日志消息    %n:是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss} %highlight(%-5level) -- %boldMagenta([%thread]) %boldCyan(%logger) :
                %msg%n
            </pattern>
            <charset>UTF-8</charset>

        </encoder>

    </appender>


    <!--  日志发送至logstash  -->
    <appender name="logstash" class="net.logstash.logback.appender.LogstashTcpSocketAppender">

        <!-- logstash的服务器地址和通信端口 -->
        <destination>127.0.0.1:5043</destination>
        <!-- encoder is required -->
        <encoder class="net.logstash.logback.encoder.LogstashEncoder">

            <!-- 在elasticsearch的index中追加applicationName字段  -->
            <customFields>{"applicationName":"${applicationName}"}</customFields>

        </encoder>


        <!--  2024-6-17  19:34-将通过MDC设置的自定义字段值添加到日志元数据中  -->
        <includeCallerData>true</includeCallerData>
        <includeMdc>true</includeMdc>

        <!-- 要添加的MDC字段名称 -->
        <includeMdcKeyName>method-description</includeMdcKeyName>

    </appender>


    <!-- 按照每天生成日志文件 -->
    <!--<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">

            &lt;!&ndash;日志文件输出的文件名&ndash;&gt;
            <FileNamePattern>${LOG_HOME}/ptp-web-web.log.%d{yyyy-MM-dd}.log</FileNamePattern>
            &lt;!&ndash;日志文件保留天数&ndash;&gt;
            <MaxHistory>30</MaxHistory>

        </rollingPolicy>

        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">

            &lt;!&ndash;格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符&ndash;&gt;
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>

        </encoder>

        &lt;!&ndash;日志文件最大的大小&ndash;&gt;
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">

            <MaxFileSize>10MB</MaxFileSize>

        </triggeringPolicy>

    </appender>-->


    <!-- 日志输出级别 -->
    <root level="INFO">

        <!--<appender-ref ref="logstash"/>-->
        <appender-ref ref="console"/>

    </root>


    <!-- 2024-6-25  22:58-如果暂时不需要将日志数据推送到ELK平台上 , 那就将下面的配置注释掉 -->
    <!--<logger name="ptp.fltv.web.service.job" level="INFO" additivity="false">

        <appender-ref ref="console"/>
        <appender-ref ref="logstash"/>

    </logger>-->


    <!-- 2024-6-25  23:09-如果暂时不需要将日志数据推送到skywalking平台上 , 那就将下面的配置注释掉 -->
    <logger name="ptp.fltv.web.service.job" level="INFO">

        <appender-ref ref="stdout"/>
        <appender-ref ref="grpc"/>

    </logger>


</configuration>